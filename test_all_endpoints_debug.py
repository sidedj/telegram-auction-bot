#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–û—Ç–ª–∞–¥–æ—á–Ω—ã–π —Ç–µ—Å—Ç –≤—Å–µ—Ö endpoints –¥–ª—è —Å—É–º–º—ã 461.43‚ÇΩ
"""

import requests
import json
import time
import hashlib

def test_endpoint_with_debug(endpoint, amount, description):
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º endpoint —Å –æ—Ç–ª–∞–¥–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π"""
    print(f"\nüîç {description}")
    print(f"   Endpoint: {endpoint}")
    print(f"   –°—É–º–º–∞: {amount}‚ÇΩ")
    print("-" * 60)
    
    url = f"https://web-production-fa7dc.up.railway.app{endpoint}"
    
    test_data = {
        'notification_type': 'p2p-incoming',
        'operation_id': f'debug_{endpoint.replace("/", "_")}_{int(time.time())}',
        'amount': str(amount),
        'withdraw_amount': str(amount),
        'currency': '643',
        'datetime': '2024-01-01T12:00:00.000Z',
        'sender': '41001000040',
        'codepro': 'false',
        'label': 'user_476589798',
        'test_notification': 'true'
    }
    
    # –í—ã—á–∏—Å–ª—è–µ–º –ø–æ–¥–ø–∏—Å—å
    sorted_keys = sorted(test_data.keys())
    string_to_sign = "&".join([f"{key}={test_data[key]}" for key in sorted_keys])
    signature = hashlib.sha1((string_to_sign + "SaTKEuJWPVXJI/JFpXDCHZ4q").encode('utf-8')).hexdigest()
    test_data['sha1_hash'] = signature
    
    print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ:")
    for key, value in test_data.items():
        print(f"   {key}: {value}")
    
    print(f"\nüéØ –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: 0 –ø—É–±–ª–∏–∫–∞—Ü–∏–π")
    print(f"‚ùå –ü—Ä–æ–±–ª–µ–º–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏–ª {int(amount)} –ø—É–±–ª–∏–∫–∞—Ü–∏–π")
    
    try:
        response = requests.post(url, data=test_data, timeout=30)
        
        print(f"\nüì• –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:")
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"   –¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞: {response.text}")
        
        if response.status_code == 200:
            print("‚úÖ Webhook: OK")
        else:
            print("‚ùå Webhook: –û—à–∏–±–∫–∞")
            
        return response.status_code == 200
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def test_all_endpoints():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ endpoints"""
    print("üöÄ –û—Ç–ª–∞–¥–æ—á–Ω—ã–π —Ç–µ—Å—Ç –≤—Å–µ—Ö endpoints")
    print("=" * 80)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ endpoints —Å –ø—Ä–æ–±–ª–µ–º–Ω–æ–π —Å—É–º–º–æ–π
    endpoints = [
        ('/yoomoney', '–û—Å–Ω–æ–≤–Ω–æ–π YooMoney endpoint'),
        ('/webhook', '–ù–æ–≤—ã–π webhook endpoint'),
        ('/yoomoney_debug', '–û—Ç–ª–∞–¥–æ—á–Ω—ã–π endpoint')
    ]
    
    amount = 461.43
    
    for endpoint, description in endpoints:
        test_endpoint_with_debug(endpoint, amount, description)
    
    print(f"\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–∞–∫–∂–µ –¥—Ä—É–≥–∏–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å—É–º–º—ã")
    print("=" * 80)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥—Ä—É–≥–∏–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å—É–º–º—ã
    problem_amounts = [25.0, 100.0, 300.0, 500.0]
    
    for amount in problem_amounts:
        test_endpoint_with_debug('/yoomoney', amount, f'YooMoney endpoint —Å —Å—É–º–º–æ–π {amount}‚ÇΩ')

if __name__ == "__main__":
    test_all_endpoints()
    
    print("\n" + "=" * 80)
    print("üéâ –û—Ç–ª–∞–¥–æ—á–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("\nüí° –ê–Ω–∞–ª–∏–∑:")
    print("   - –ï—Å–ª–∏ –≤—Å–µ —Ç–µ—Å—Ç—ã –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç 0 –ø—É–±–ª–∏–∫–∞—Ü–∏–π, –Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏–ª 461,")
    print("     —Ç–æ –ø—Ä–æ–±–ª–µ–º–∞ –≤ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ")
    print("   - –ï—Å–ª–∏ –∫–∞–∫–æ–π-—Ç–æ —Ç–µ—Å—Ç –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç,")
    print("     —Ç–æ –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º endpoint")
    print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ Railway –¥–ª—è –¥–µ—Ç–∞–ª–µ–π")
