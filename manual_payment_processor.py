#!/usr/bin/env python3
"""
–†—É—á–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–ª–∞—Ç–µ–∂–µ–π –¥–ª—è —Å—Ä–æ—á–Ω–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã
"""

import sqlite3
import requests
import time
from datetime import datetime

def get_user_balance(user_id: int) -> int:
    """–ü–æ–ª—É—á–∞–µ—Ç –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        with sqlite3.connect("auction_bot.db") as conn:
            cursor = conn.cursor()
            cursor.execute("SELECT balance FROM users WHERE user_id = ?", (user_id,))
            result = cursor.fetchone()
            return result[0] if result else 0
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞: {e}")
        return 0

def update_user_balance(user_id: int, new_balance: int):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        with sqlite3.connect("auction_bot.db") as conn:
            cursor = conn.cursor()
            cursor.execute("SELECT user_id FROM users WHERE user_id = ?", (user_id,))
            if cursor.fetchone():
                cursor.execute("UPDATE users SET balance = ? WHERE user_id = ?", (new_balance, user_id))
            else:
                cursor.execute("INSERT INTO users (user_id, balance, created_at) VALUES (?, ?, datetime('now'))", (user_id, new_balance))
            conn.commit()
            print(f"‚úÖ –ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –æ–±–Ω–æ–≤–ª–µ–Ω: {new_balance}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞: {e}")

def send_telegram_message(user_id: int, message: str):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ Telegram"""
    try:
        bot_token = "8486386170:AAEGHCYOtGlx3TrmZ3e9vQ7p8PbtCgs0YMw"
        url = f"https://api.telegram.org/bot{bot_token}/sendMessage"
        data = {
            'chat_id': user_id,
            'text': message,
            'parse_mode': 'HTML'
        }
        response = requests.post(url, data=data, timeout=10)
        if response.status_code == 200:
            print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ Telegram —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        return False

def process_payment_manually(user_id: int, amount: float, description: str = ""):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–ª–∞—Ç–µ–∂ –≤—Ä—É—á–Ω—É—é"""
    print(f"\n=== –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–ª–∞—Ç–µ–∂–∞ ===")
    print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_id}")
    print(f"–°—É–º–º–∞: {amount} ‚ÇΩ")
    print(f"–û–ø–∏—Å–∞–Ω–∏–µ: {description}")
    print(f"–í—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—É–±–ª–∏–∫–∞—Ü–∏–π –ø–æ —Å—É–º–º–µ (—É—á–∏—Ç—ã–≤–∞—è –∫–æ–º–∏—Å—Å–∏—é –ÆMoney)
    if amount >= 48.0 and amount <= 52.0:  # 50‚ÇΩ —Å –∫–æ–º–∏—Å—Å–∏–µ–π (48.50‚ÇΩ)
        publications = 1
        expected_amount = 50
    elif amount >= 195.0 and amount <= 205.0:  # 200‚ÇΩ —Å –∫–æ–º–∏—Å—Å–∏–µ–π (~198‚ÇΩ)
        publications = 5
        expected_amount = 200
    elif amount >= 340.0 and amount <= 360.0:  # 350‚ÇΩ —Å –∫–æ–º–∏—Å—Å–∏–µ–π (~348‚ÇΩ)
        publications = 10
        expected_amount = 350
    elif amount >= 590.0 and amount <= 610.0:  # 600‚ÇΩ —Å –∫–æ–º–∏—Å—Å–∏–µ–π (~598‚ÇΩ)
        publications = 20
        expected_amount = 600
    else:
        print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Å—É–º–º–∞: {amount} ‚ÇΩ")
        print("–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—É–º–º—ã: 48-52‚ÇΩ (1 –ø—É–±–ª–∏–∫–∞—Ü–∏—è), 195-205‚ÇΩ (5 –ø—É–±–ª–∏–∫–∞—Ü–∏–π), 340-360‚ÇΩ (10 –ø—É–±–ª–∏–∫–∞—Ü–∏–π), 590-610‚ÇΩ (20 –ø—É–±–ª–∏–∫–∞—Ü–∏–π)")
        return False
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å
    current_balance = get_user_balance(user_id)
    new_balance = current_balance + publications
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å
    update_user_balance(user_id, new_balance)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (–ø–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–æ–º–∏–Ω–∞–ª—å–Ω—É—é —Å—É–º–º—É, –∞ –Ω–µ —Å –∫–æ–º–∏—Å—Å–∏–µ–π)
    message = f"üí∞ <b>–ü–ª–∞—Ç–µ–∂ –ø–æ–ª—É—á–µ–Ω!</b>\n\n"
    message += f"–°—É–º–º–∞: {expected_amount} ‚ÇΩ\n"
    message += f"–ù–∞—á–∏—Å–ª–µ–Ω–æ: {publications} –ø—É–±–ª–∏–∫–∞—Ü–∏–π\n"
    message += f"–í–∞—à –±–∞–ª–∞–Ω—Å: {new_balance} –ø—É–±–ª–∏–∫–∞—Ü–∏–π\n\n"
    message += f"‚è∞ {datetime.now().strftime('%H:%M:%S')}"
    
    success = send_telegram_message(user_id, message)
    
    if success:
        print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id} –Ω–∞—á–∏—Å–ª–µ–Ω–æ {publications} –ø—É–±–ª–∏–∫–∞—Ü–∏–π")
        print(f"‚úÖ –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {new_balance} –ø—É–±–ª–∏–∫–∞—Ü–∏–π")
        return True
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
        return False

def main():
    print("=== –†–£–ß–ù–û–ô –û–ë–†–ê–ë–û–¢–ß–ò–ö –ü–õ–ê–¢–ï–ñ–ï–ô ===")
    print("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å—Ä–æ—á–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–∞—Ç–µ–∂–µ–π")
    print("–∫–æ–≥–¥–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç")
    
    # –í–∞—à ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_id = 7647551803
    
    print(f"\n–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {get_user_balance(user_id)} –ø—É–±–ª–∏–∫–∞—Ü–∏–π")
    
    while True:
        print("\n" + "="*50)
        print("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
        print("1. –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –ø–ª–∞—Ç–µ–∂ 50‚ÇΩ (1 –ø—É–±–ª–∏–∫–∞—Ü–∏—è)")
        print("2. –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –ø–ª–∞—Ç–µ–∂ 200‚ÇΩ (5 –ø—É–±–ª–∏–∫–∞—Ü–∏–π)")
        print("3. –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –ø–ª–∞—Ç–µ–∂ 350‚ÇΩ (10 –ø—É–±–ª–∏–∫–∞—Ü–∏–π)")
        print("4. –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –ø–ª–∞—Ç–µ–∂ 600‚ÇΩ (20 –ø—É–±–ª–∏–∫–∞—Ü–∏–π)")
        print("5. –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—É—é —Å—É–º–º—É")
        print("6. –ü–æ–∫–∞–∑–∞—Ç—å –±–∞–ª–∞–Ω—Å")
        print("0. –í—ã—Ö–æ–¥")
        
        choice = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä: ").strip()
        
        if choice == "1":
            process_payment_manually(user_id, 50, "1 –ø—É–±–ª–∏–∫–∞—Ü–∏—è")
        elif choice == "2":
            process_payment_manually(user_id, 200, "5 –ø—É–±–ª–∏–∫–∞—Ü–∏–π")
        elif choice == "3":
            process_payment_manually(user_id, 350, "10 –ø—É–±–ª–∏–∫–∞—Ü–∏–π")
        elif choice == "4":
            process_payment_manually(user_id, 600, "20 –ø—É–±–ª–∏–∫–∞—Ü–∏–π")
        elif choice == "5":
            try:
                amount = float(input("–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ø–ª–∞—Ç–µ–∂–∞: "))
                process_payment_manually(user_id, amount, "–ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω–∞—è —Å—É–º–º–∞")
            except ValueError:
                print("‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞")
        elif choice == "6":
            balance = get_user_balance(user_id)
            print(f"–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {balance} –ø—É–±–ª–∏–∫–∞—Ü–∏–π")
        elif choice == "0":
            break
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")
        
        time.sleep(1)

if __name__ == "__main__":
    main()
