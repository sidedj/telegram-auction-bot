#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ —á–µ—Ä–µ–∑ webhook
"""
import requests
import hashlib
from datetime import datetime
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

WEBHOOK_URL = "https://telegabot-production-3c68.up.railway.app/yoomoney"
YOOMONEY_SECRET = "SaTKEuJWPVXJI/JFpXDCHZ4q"

def calculate_signature(data, secret):
    """–í—ã—á–∏—Å–ª—è–µ—Ç –ø–æ–¥–ø–∏—Å—å –¥–ª—è –¥–∞–Ω–Ω—ã—Ö"""
    sorted_keys = sorted(data.keys())
    string_to_sign = "&".join([f"{key}={data[key]}" for key in sorted_keys if key != 'sha1_hash'])
    signature = hashlib.sha1((string_to_sign + secret).encode('utf-8')).hexdigest()
    return signature

def test_balance_update():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ —á–µ—Ä–µ–∑ webhook"""
    print("üí∞ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞...")
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    data = {
        'notification_type': 'card-incoming',
        'operation_id': f"test_balance_update_{int(datetime.now().timestamp())}",
        'amount': '48.50',
        'withdraw_amount': '50.00',
        'currency': '643',
        'datetime': datetime.now().strftime('%Y-%m-%dT%H:%M:%S.%fZ'),
        'sender': '41001000040',
        'codepro': 'false',
        'label': 'user_476589798',  # ID –∞–¥–º–∏–Ω–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        'test_notification': 'true'
    }
    
    # –í—ã—á–∏—Å–ª—è–µ–º –ø–æ–¥–ø–∏—Å—å
    signature = calculate_signature(data, YOOMONEY_SECRET)
    data['sha1_hash'] = signature
    
    print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ:")
    for key, value in data.items():
        print(f"   {key}: {value}")
    
    try:
        response = requests.post(WEBHOOK_URL, data=data, timeout=30)
        
        print(f"\nüì• –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:")
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"   –¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞: {response.text}")
        
        if response.status_code == 200:
            print("‚úÖ Webhook –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
            print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–æ—Ç–µ –∫–æ–º–∞–Ω–¥–æ–π /stats")
            return True
        else:
            print("‚ùå Webhook –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É!")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return False

def test_multiple_payments():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–ª–∞—Ç–µ–∂–µ–π –ø–æ–¥—Ä—è–¥"""
    print("\nüîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–ª–∞—Ç–µ–∂–µ–π...")
    
    results = []
    
    # –¢–µ—Å—Ç 1: –ü–ª–∞—Ç–µ–∂ 50‚ÇΩ (1 –ø—É–±–ª–∏–∫–∞—Ü–∏—è)
    print("\n1Ô∏è‚É£ –ü–ª–∞—Ç–µ–∂ 50‚ÇΩ...")
    data1 = {
        'notification_type': 'card-incoming',
        'operation_id': f"test_50_{int(datetime.now().timestamp())}",
        'amount': '48.50',
        'withdraw_amount': '50.00',
        'currency': '643',
        'datetime': datetime.now().strftime('%Y-%m-%dT%H:%M:%S.%fZ'),
        'sender': '41001000040',
        'codepro': 'false',
        'label': 'user_476589798',
        'test_notification': 'true'
    }
    data1['sha1_hash'] = calculate_signature(data1, YOOMONEY_SECRET)
    
    try:
        response1 = requests.post(WEBHOOK_URL, data=data1, timeout=30)
        results.append(response1.status_code == 200)
        print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {'‚úÖ –£—Å–ø–µ—à–Ω–æ' if results[-1] else '‚ùå –û—à–∏–±–∫–∞'}")
    except Exception as e:
        print(f"   –û—à–∏–±–∫–∞: {e}")
        results.append(False)
    
    # –¢–µ—Å—Ç 2: –ü–ª–∞—Ç–µ–∂ 200‚ÇΩ (5 –ø—É–±–ª–∏–∫–∞—Ü–∏–π)
    print("\n2Ô∏è‚É£ –ü–ª–∞—Ç–µ–∂ 200‚ÇΩ...")
    data2 = {
        'notification_type': 'card-incoming',
        'operation_id': f"test_200_{int(datetime.now().timestamp())}",
        'amount': '192.00',
        'withdraw_amount': '200.00',
        'currency': '643',
        'datetime': datetime.now().strftime('%Y-%m-%dT%H:%M:%S.%fZ'),
        'sender': '41001000040',
        'codepro': 'false',
        'label': 'user_476589798',
        'test_notification': 'true'
    }
    data2['sha1_hash'] = calculate_signature(data2, YOOMONEY_SECRET)
    
    try:
        response2 = requests.post(WEBHOOK_URL, data=data2, timeout=30)
        results.append(response2.status_code == 200)
        print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {'‚úÖ –£—Å–ø–µ—à–Ω–æ' if results[-1] else '‚ùå –û—à–∏–±–∫–∞'}")
    except Exception as e:
        print(f"   –û—à–∏–±–∫–∞: {e}")
        results.append(False)
    
    # –¢–µ—Å—Ç 3: –ü–ª–∞—Ç–µ–∂ 350‚ÇΩ (10 –ø—É–±–ª–∏–∫–∞—Ü–∏–π)
    print("\n3Ô∏è‚É£ –ü–ª–∞—Ç–µ–∂ 350‚ÇΩ...")
    data3 = {
        'notification_type': 'card-incoming',
        'operation_id': f"test_350_{int(datetime.now().timestamp())}",
        'amount': '322.00',
        'withdraw_amount': '350.00',
        'currency': '643',
        'datetime': datetime.now().strftime('%Y-%m-%dT%H:%M:%S.%fZ'),
        'sender': '41001000040',
        'codepro': 'false',
        'label': 'user_476589798',
        'test_notification': 'true'
    }
    data3['sha1_hash'] = calculate_signature(data3, YOOMONEY_SECRET)
    
    try:
        response3 = requests.post(WEBHOOK_URL, data=data3, timeout=30)
        results.append(response3.status_code == 200)
        print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {'‚úÖ –£—Å–ø–µ—à–Ω–æ' if results[-1] else '‚ùå –û—à–∏–±–∫–∞'}")
    except Exception as e:
        print(f"   –û—à–∏–±–∫–∞: {e}")
        results.append(False)
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print(f"   –£—Å–ø–µ—à–Ω—ã—Ö: {sum(results)}/{len(results)}")
    
    if all(results):
        print("üéâ –í—Å–µ –ø–ª–∞—Ç–µ–∂–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("üí° –û–∂–∏–¥–∞–µ–º—ã–π –±–∞–ª–∞–Ω—Å: 16 –ø—É–±–ª–∏–∫–∞—Ü–∏–π (1+5+10)")
    else:
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–ª–∞—Ç–µ–∂–∏ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã")
    
    return all(results)

if __name__ == "__main__":
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞")
    print("=" * 50)
    
    # –¢–µ—Å—Ç –æ–¥–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
    success1 = test_balance_update()
    
    # –¢–µ—Å—Ç –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–ª–∞—Ç–µ–∂–µ–π
    success2 = test_multiple_payments()
    
    print("\n" + "=" * 50)
    print("üìã –ò–¢–û–ì–û–í–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
    print("=" * 50)
    print(f"–û–¥–∏–Ω–æ—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂: {'‚úÖ –£—Å–ø–µ—à–Ω–æ' if success1 else '‚ùå –û—à–∏–±–∫–∞'}")
    print(f"–ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏: {'‚úÖ –£—Å–ø–µ—à–Ω–æ' if success2 else '‚ùå –û—à–∏–±–∫–∞'}")
    
    if success1 and success2:
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –±–∞–ª–∞–Ω—Å –≤ –±–æ—Ç–µ –∫–æ–º–∞–Ω–¥–æ–π /stats")
    else:
        print("\n‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏")
        print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏")
    
    print("\n‚ú® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
